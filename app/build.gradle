apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"
    defaultConfig {
        applicationId "com.mycardboarddreams.jacobsladder"
        minSdkVersion 17
        targetSdkVersion 24
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions -llog -landroid -lEGL -lGLESv1_CM"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        free {
            versionCode 38
            versionName "4.0.1"
            versionNameSuffix "-free"
        }
        deluxe {
            versionCode 13
            versionName "2.5.5"
            applicationIdSuffix ".deluxe"
            versionNameSuffix "-deluxe"
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    compile 'com.google.android.gms:play-services-analytics:9.6.1'
    androidTestCompile 'org.assertj:assertj-core:2.5.0'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile project(':common')
}
//
//task grantPermissions(type: Exec, dependsOn: 'installDebugAndroidTest') {
//    def permissions = ['WRITE_EXTERNAL_STORAGE',
//                       'READ_EXTERNAL_STORAGE']
//    Properties properties = new Properties()
//    properties.load(project.rootProject.file('local.properties').newDataInputStream())
//    def path = properties.getProperty('sdk.dir')
//    permissions.each {
//        System.out.println("$path/platform-tools/adb shell pm grant com.mycardboarddreams.jacobsladder.deluxe android.permission.${it}")
//        commandLine "$path/platform-tools/adb shell pm grant com.mycardboarddreams.jacobsladder.deluxe android.permission.${it}".split(' ')
//    }}
//
//tasks.whenTaskAdded { task ->
//    if (task.name.startsWith('connectedDebugAndroidTest')) {
//        task.dependsOn grantPermissions
//    }
//}

apply plugin: 'com.google.gms.google-services'
